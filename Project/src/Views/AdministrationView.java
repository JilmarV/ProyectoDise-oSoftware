/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Views;

import Models.City;
import Models.Hotel;
import Models.Room;
import Services.UserController;
import Models.User;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author juan
 */
public class AdministrationView extends javax.swing.JFrame {

    UserController control;

    /**
     * Creates new form Administration
     */
    public AdministrationView() {
        initComponents();
        this.setLocationRelativeTo(this);
        control = new UserController();
        fillTableHotels();
        fillTableRooms();
        fillTableUsers();
        fullCombo();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jPasswordField1 = new javax.swing.JPasswordField();
        PanelPrincipal = new javax.swing.JTabbedPane();
        PanelAdminHabita = new javax.swing.JPanel();
        PanelDentroGestion2 = new javax.swing.JPanel();
        lblNameHotel1 = new javax.swing.JLabel();
        txtNumberRoom = new javax.swing.JTextField();
        jSeparator22 = new javax.swing.JSeparator();
        lblAddressHotel1 = new javax.swing.JLabel();
        lblClassificationHotel1 = new javax.swing.JLabel();
        lblModCons1 = new javax.swing.JLabel();
        txtModConsRoom = new javax.swing.JTextField();
        jSeparator25 = new javax.swing.JSeparator();
        lblPriceNight = new javax.swing.JLabel();
        txtPriceNight = new javax.swing.JTextField();
        jSeparator26 = new javax.swing.JSeparator();
        cbxTypeRoom = new javax.swing.JComboBox<>();
        cbxStadeRoom = new javax.swing.JComboBox<>();
        lblnameHotel = new javax.swing.JLabel();
        cbHotel = new javax.swing.JComboBox<>();
        cbxNumberGuests = new javax.swing.JComboBox();
        lblAddressHotel2 = new javax.swing.JLabel();
        PanelDentroGestion3 = new javax.swing.JPanel();
        btnDeleteRoom = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        btnRegisterRoom = new javax.swing.JButton();
        btnUpdateRoom = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        tbl_rooms = new javax.swing.JTable();
        btnSearchRoom = new javax.swing.JButton();
        btnBack2 = new javax.swing.JButton();
        PanelGestionarUsuario = new javax.swing.JPanel();
        PanelDentroGestion1 = new javax.swing.JPanel();
        btnDeleteUser = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        btnRegisterUser = new javax.swing.JButton();
        btnUpdateUser = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        tbl_users = new javax.swing.JTable();
        btnSearchUser = new javax.swing.JButton();
        btnBack1 = new javax.swing.JButton();
        PanelDentroGestion = new javax.swing.JPanel();
        lblName = new javax.swing.JLabel();
        txtNameUser = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        txtAgeUser = new javax.swing.JTextField();
        lblEdad = new javax.swing.JLabel();
        txtAddressUser = new javax.swing.JTextField();
        jSeparator3 = new javax.swing.JSeparator();
        lblAddress = new javax.swing.JLabel();
        txtPhoneNumberUser = new javax.swing.JTextField();
        lblPhoneNumber = new javax.swing.JLabel();
        txtUsername = new javax.swing.JTextField();
        jSeparator5 = new javax.swing.JSeparator();
        lblUsername = new javax.swing.JLabel();
        jSeparator6 = new javax.swing.JSeparator();
        txtEmailUser = new javax.swing.JTextField();
        lblEmail = new javax.swing.JLabel();
        lblPassword = new javax.swing.JLabel();
        txtPasswordUser = new javax.swing.JTextField();
        jSeparator8 = new javax.swing.JSeparator();
        jSeparator9 = new javax.swing.JSeparator();
        PanelAdminHotel = new javax.swing.JPanel();
        PanelDentroGestion4 = new javax.swing.JPanel();
        lblNameHotel = new javax.swing.JLabel();
        txtNameHotel = new javax.swing.JTextField();
        jSeparator17 = new javax.swing.JSeparator();
        jSeparator18 = new javax.swing.JSeparator();
        txtAddressHotel = new javax.swing.JTextField();
        lblAddressHotel = new javax.swing.JLabel();
        lblClassificationHotel = new javax.swing.JLabel();
        txtModConsHotel = new javax.swing.JTextField();
        jSeparator20 = new javax.swing.JSeparator();
        lblModCons = new javax.swing.JLabel();
        jSeparator21 = new javax.swing.JSeparator();
        txtPicturesHotel = new javax.swing.JTextField();
        lblPictures = new javax.swing.JLabel();
        lblPictures1 = new javax.swing.JLabel();
        cbCIties = new javax.swing.JComboBox<>();
        cbxclasification = new javax.swing.JComboBox<>();
        PanelDentroGestion5 = new javax.swing.JPanel();
        btnDeleteHotel = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        btnRegisterHotel = new javax.swing.JButton();
        btnUpdateHotel = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane6 = new javax.swing.JScrollPane();
        tbl_hotels = new javax.swing.JTable();
        btnSearchHotel = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();

        jLabel1.setText("jLabel1");

        jPasswordField1.setText("jPasswordField1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        PanelPrincipal.setBackground(new java.awt.Color(4, 27, 43));
        PanelPrincipal.setForeground(new java.awt.Color(255, 255, 255));
        PanelPrincipal.setFont(new java.awt.Font("Lohit Devanagari", 1, 15)); // NOI18N

        PanelDentroGestion2.setBackground(new java.awt.Color(4, 27, 43));
        PanelDentroGestion2.setPreferredSize(new java.awt.Dimension(400, 500));

        lblNameHotel1.setFont(new java.awt.Font("Lohit Devanagari", 1, 18)); // NOI18N
        lblNameHotel1.setForeground(new java.awt.Color(255, 255, 255));
        lblNameHotel1.setText("NUMERO HABITACIÓN");

        txtNumberRoom.setBackground(new java.awt.Color(0, 0, 102));
        txtNumberRoom.setFont(new java.awt.Font("Lohit Devanagari", 0, 18)); // NOI18N
        txtNumberRoom.setForeground(new java.awt.Color(73, 181, 172));
        txtNumberRoom.setBorder(null);
        txtNumberRoom.setCaretColor(new java.awt.Color(73, 181, 172));

        jSeparator22.setBackground(new java.awt.Color(0, 153, 255));
        jSeparator22.setForeground(new java.awt.Color(0, 153, 255));

        lblAddressHotel1.setFont(new java.awt.Font("Lohit Devanagari", 1, 18)); // NOI18N
        lblAddressHotel1.setForeground(new java.awt.Color(255, 255, 255));
        lblAddressHotel1.setText("TIPO HABITACIÓN");

        lblClassificationHotel1.setFont(new java.awt.Font("Lohit Devanagari", 1, 18)); // NOI18N
        lblClassificationHotel1.setForeground(new java.awt.Color(255, 255, 255));
        lblClassificationHotel1.setText("ESTADO");

        lblModCons1.setFont(new java.awt.Font("Lohit Devanagari", 1, 18)); // NOI18N
        lblModCons1.setForeground(new java.awt.Color(255, 255, 255));
        lblModCons1.setText("COMODIDADES");

        txtModConsRoom.setBackground(new java.awt.Color(0, 0, 102));
        txtModConsRoom.setFont(new java.awt.Font("Lohit Devanagari", 0, 18)); // NOI18N
        txtModConsRoom.setForeground(new java.awt.Color(73, 181, 172));
        txtModConsRoom.setBorder(null);
        txtModConsRoom.setCaretColor(new java.awt.Color(73, 181, 172));

        jSeparator25.setBackground(new java.awt.Color(0, 153, 255));
        jSeparator25.setForeground(new java.awt.Color(0, 153, 255));

        lblPriceNight.setFont(new java.awt.Font("Lohit Devanagari", 1, 18)); // NOI18N
        lblPriceNight.setForeground(new java.awt.Color(255, 255, 255));
        lblPriceNight.setText("PRECIO NOCHE");

        txtPriceNight.setBackground(new java.awt.Color(0, 0, 102));
        txtPriceNight.setFont(new java.awt.Font("Lohit Devanagari", 0, 18)); // NOI18N
        txtPriceNight.setForeground(new java.awt.Color(73, 181, 172));
        txtPriceNight.setBorder(null);
        txtPriceNight.setCaretColor(new java.awt.Color(73, 181, 172));

        jSeparator26.setBackground(new java.awt.Color(0, 153, 255));
        jSeparator26.setForeground(new java.awt.Color(0, 153, 255));

        cbxTypeRoom.setBackground(new java.awt.Color(0, 0, 102));
        cbxTypeRoom.setFont(new java.awt.Font("Lohit Devanagari", 0, 18)); // NOI18N
        cbxTypeRoom.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "seleccione", "individual", "doble", "suite" }));

        cbxStadeRoom.setBackground(new java.awt.Color(0, 0, 102));
        cbxStadeRoom.setFont(new java.awt.Font("Lohit Devanagari", 0, 18)); // NOI18N
        cbxStadeRoom.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "seleccione", "Disponible", "Ocupada" }));
        cbxStadeRoom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxStadeRoomActionPerformed(evt);
            }
        });

        lblnameHotel.setFont(new java.awt.Font("Lohit Devanagari", 1, 18)); // NOI18N
        lblnameHotel.setForeground(new java.awt.Color(255, 255, 255));
        lblnameHotel.setText("HOTEL");

        cbHotel.setBackground(new java.awt.Color(0, 0, 102));
        cbHotel.setFont(new java.awt.Font("Lohit Devanagari", 0, 18)); // NOI18N
        cbHotel.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbHotelItemStateChanged(evt);
            }
        });

        cbxNumberGuests.setBackground(new java.awt.Color(0, 0, 102));
        cbxNumberGuests.setFont(new java.awt.Font("Lohit Devanagari", 0, 18)); // NOI18N
        cbxNumberGuests.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1", "2", "3", "4", "5" }));

        lblAddressHotel2.setFont(new java.awt.Font("Lohit Devanagari", 1, 18)); // NOI18N
        lblAddressHotel2.setForeground(new java.awt.Color(255, 255, 255));
        lblAddressHotel2.setText("NÚMERO HUESPEDES");

        javax.swing.GroupLayout PanelDentroGestion2Layout = new javax.swing.GroupLayout(PanelDentroGestion2);
        PanelDentroGestion2.setLayout(PanelDentroGestion2Layout);
        PanelDentroGestion2Layout.setHorizontalGroup(
            PanelDentroGestion2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelDentroGestion2Layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(PanelDentroGestion2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblnameHotel)
                    .addComponent(cbHotel, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(PanelDentroGestion2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(PanelDentroGestion2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lblAddressHotel2)
                            .addComponent(cbxNumberGuests, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(PanelDentroGestion2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lblModCons1)
                            .addComponent(jSeparator26, javax.swing.GroupLayout.DEFAULT_SIZE, 290, Short.MAX_VALUE)
                            .addComponent(txtModConsRoom, javax.swing.GroupLayout.DEFAULT_SIZE, 290, Short.MAX_VALUE)
                            .addComponent(jSeparator25, javax.swing.GroupLayout.DEFAULT_SIZE, 290, Short.MAX_VALUE)
                            .addComponent(lblPriceNight)
                            .addComponent(txtPriceNight, javax.swing.GroupLayout.DEFAULT_SIZE, 290, Short.MAX_VALUE)
                            .addComponent(lblNameHotel1)
                            .addComponent(txtNumberRoom, javax.swing.GroupLayout.DEFAULT_SIZE, 290, Short.MAX_VALUE)
                            .addComponent(jSeparator22, javax.swing.GroupLayout.DEFAULT_SIZE, 290, Short.MAX_VALUE)
                            .addComponent(lblAddressHotel1)
                            .addComponent(lblClassificationHotel1)
                            .addComponent(cbxTypeRoom, 0, 290, Short.MAX_VALUE)
                            .addComponent(cbxStadeRoom, 0, 290, Short.MAX_VALUE))))
                .addContainerGap(26, Short.MAX_VALUE))
        );
        PanelDentroGestion2Layout.setVerticalGroup(
            PanelDentroGestion2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelDentroGestion2Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(lblNameHotel1)
                .addGap(5, 5, 5)
                .addComponent(txtNumberRoom, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator22, javax.swing.GroupLayout.PREFERRED_SIZE, 3, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblAddressHotel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cbxTypeRoom, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblClassificationHotel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cbxStadeRoom, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(7, 7, 7)
                .addComponent(lblnameHotel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cbHotel, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblModCons1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(txtModConsRoom, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jSeparator25, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(lblPriceNight)
                .addGap(5, 5, 5)
                .addComponent(txtPriceNight, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator26, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblAddressHotel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cbxNumberGuests, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(203, 203, 203))
        );

        PanelDentroGestion3.setBackground(new java.awt.Color(0, 0, 102));
        PanelDentroGestion3.setPreferredSize(new java.awt.Dimension(400, 500));

        btnDeleteRoom.setBackground(new java.awt.Color(204, 0, 0));
        btnDeleteRoom.setFont(new java.awt.Font("Lohit Devanagari", 1, 18)); // NOI18N
        btnDeleteRoom.setForeground(new java.awt.Color(255, 255, 255));
        btnDeleteRoom.setText("BORRAR");
        btnDeleteRoom.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnDeleteRoom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteRoomActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Lohit Devanagari", 1, 40)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Gestion De Habitaciones");

        btnRegisterRoom.setBackground(new java.awt.Color(0, 153, 255));
        btnRegisterRoom.setFont(new java.awt.Font("Lohit Devanagari", 1, 18)); // NOI18N
        btnRegisterRoom.setForeground(new java.awt.Color(255, 255, 255));
        btnRegisterRoom.setText(" REGISTRAR HABITACIÓN");
        btnRegisterRoom.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnRegisterRoom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegisterRoomActionPerformed(evt);
            }
        });

        btnUpdateRoom.setBackground(new java.awt.Color(0, 153, 255));
        btnUpdateRoom.setFont(new java.awt.Font("Lohit Devanagari", 1, 18)); // NOI18N
        btnUpdateRoom.setForeground(new java.awt.Color(255, 255, 255));
        btnUpdateRoom.setText("ACTUALIZAR");
        btnUpdateRoom.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnUpdateRoom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateRoomActionPerformed(evt);
            }
        });

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/logo_mid.jpg"))); // NOI18N

        tbl_rooms.setFont(new java.awt.Font("Lohit Devanagari", 0, 18)); // NOI18N
        tbl_rooms.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane5.setViewportView(tbl_rooms);

        btnSearchRoom.setBackground(new java.awt.Color(0, 153, 255));
        btnSearchRoom.setFont(new java.awt.Font("Lohit Devanagari", 1, 18)); // NOI18N
        btnSearchRoom.setForeground(new java.awt.Color(255, 255, 255));
        btnSearchRoom.setText("BUSCAR");
        btnSearchRoom.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnSearchRoom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchRoomActionPerformed(evt);
            }
        });

        btnBack2.setBackground(new java.awt.Color(0, 0, 51));
        btnBack2.setFont(new java.awt.Font("Lohit Devanagari", 1, 18)); // NOI18N
        btnBack2.setForeground(new java.awt.Color(255, 255, 255));
        btnBack2.setText("ATRAS");
        btnBack2.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnBack2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBack2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout PanelDentroGestion3Layout = new javax.swing.GroupLayout(PanelDentroGestion3);
        PanelDentroGestion3.setLayout(PanelDentroGestion3Layout);
        PanelDentroGestion3Layout.setHorizontalGroup(
            PanelDentroGestion3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelDentroGestion3Layout.createSequentialGroup()
                .addGroup(PanelDentroGestion3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PanelDentroGestion3Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addGap(113, 113, 113)
                        .addComponent(jLabel4))
                    .addGroup(PanelDentroGestion3Layout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addGroup(PanelDentroGestion3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 754, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(PanelDentroGestion3Layout.createSequentialGroup()
                                .addGroup(PanelDentroGestion3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(btnUpdateRoom, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btnRegisterRoom, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(37, 37, 37)
                                .addGroup(PanelDentroGestion3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(btnDeleteRoom, javax.swing.GroupLayout.DEFAULT_SIZE, 196, Short.MAX_VALUE)
                                    .addComponent(btnSearchRoom, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnBack2, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(37, Short.MAX_VALUE))
        );
        PanelDentroGestion3Layout.setVerticalGroup(
            PanelDentroGestion3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelDentroGestion3Layout.createSequentialGroup()
                .addGroup(PanelDentroGestion3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 478, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, Short.MAX_VALUE)
                .addGroup(PanelDentroGestion3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnDeleteRoom, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnRegisterRoom, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(PanelDentroGestion3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnUpdateRoom, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSearchRoom, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBack2, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(51, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout PanelAdminHabitaLayout = new javax.swing.GroupLayout(PanelAdminHabita);
        PanelAdminHabita.setLayout(PanelAdminHabitaLayout);
        PanelAdminHabitaLayout.setHorizontalGroup(
            PanelAdminHabitaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelAdminHabitaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(PanelDentroGestion2, javax.swing.GroupLayout.PREFERRED_SIZE, 353, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(PanelDentroGestion3, javax.swing.GroupLayout.DEFAULT_SIZE, 828, Short.MAX_VALUE)
                .addContainerGap())
        );
        PanelAdminHabitaLayout.setVerticalGroup(
            PanelAdminHabitaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelAdminHabitaLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(PanelAdminHabitaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(PanelDentroGestion2, javax.swing.GroupLayout.PREFERRED_SIZE, 768, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(PanelDentroGestion3, javax.swing.GroupLayout.PREFERRED_SIZE, 768, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        PanelPrincipal.addTab("Administrar Habitaciones", PanelAdminHabita);

        PanelDentroGestion1.setBackground(new java.awt.Color(0, 0, 102));
        PanelDentroGestion1.setPreferredSize(new java.awt.Dimension(400, 500));

        btnDeleteUser.setBackground(new java.awt.Color(204, 0, 0));
        btnDeleteUser.setFont(new java.awt.Font("Lohit Devanagari", 1, 18)); // NOI18N
        btnDeleteUser.setForeground(new java.awt.Color(255, 255, 255));
        btnDeleteUser.setText("BORRAR");
        btnDeleteUser.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnDeleteUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteUserActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Lohit Devanagari", 1, 40)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Gestion De Usuarios");

        btnRegisterUser.setBackground(new java.awt.Color(0, 153, 255));
        btnRegisterUser.setFont(new java.awt.Font("Lohit Devanagari", 1, 18)); // NOI18N
        btnRegisterUser.setForeground(new java.awt.Color(255, 255, 255));
        btnRegisterUser.setText(" REGISTRAR USUARIO");
        btnRegisterUser.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnRegisterUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegisterUserActionPerformed(evt);
            }
        });

        btnUpdateUser.setBackground(new java.awt.Color(0, 153, 255));
        btnUpdateUser.setFont(new java.awt.Font("Lohit Devanagari", 1, 18)); // NOI18N
        btnUpdateUser.setForeground(new java.awt.Color(255, 255, 255));
        btnUpdateUser.setText("ACTUALIZAR");
        btnUpdateUser.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnUpdateUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateUserActionPerformed(evt);
            }
        });

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/logo_mid.jpg"))); // NOI18N

        tbl_users.setFont(new java.awt.Font("Lohit Devanagari", 0, 15)); // NOI18N
        tbl_users.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane4.setViewportView(tbl_users);

        btnSearchUser.setBackground(new java.awt.Color(0, 153, 255));
        btnSearchUser.setFont(new java.awt.Font("Lohit Devanagari", 1, 18)); // NOI18N
        btnSearchUser.setForeground(new java.awt.Color(255, 255, 255));
        btnSearchUser.setText("BUSCAR");
        btnSearchUser.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnSearchUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchUserActionPerformed(evt);
            }
        });

        btnBack1.setBackground(new java.awt.Color(0, 0, 51));
        btnBack1.setFont(new java.awt.Font("Lohit Devanagari", 1, 18)); // NOI18N
        btnBack1.setForeground(new java.awt.Color(255, 255, 255));
        btnBack1.setText("ATRAS");
        btnBack1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnBack1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBack1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout PanelDentroGestion1Layout = new javax.swing.GroupLayout(PanelDentroGestion1);
        PanelDentroGestion1.setLayout(PanelDentroGestion1Layout);
        PanelDentroGestion1Layout.setHorizontalGroup(
            PanelDentroGestion1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelDentroGestion1Layout.createSequentialGroup()
                .addGroup(PanelDentroGestion1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PanelDentroGestion1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(136, 136, 136)
                        .addComponent(jLabel3))
                    .addGroup(PanelDentroGestion1Layout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addGroup(PanelDentroGestion1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 754, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(PanelDentroGestion1Layout.createSequentialGroup()
                                .addGroup(PanelDentroGestion1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(btnUpdateUser, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btnRegisterUser, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 196, Short.MAX_VALUE))
                                .addGap(37, 37, 37)
                                .addGroup(PanelDentroGestion1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(btnDeleteUser, javax.swing.GroupLayout.DEFAULT_SIZE, 196, Short.MAX_VALUE)
                                    .addComponent(btnSearchUser, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnBack1, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(37, Short.MAX_VALUE))
        );
        PanelDentroGestion1Layout.setVerticalGroup(
            PanelDentroGestion1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelDentroGestion1Layout.createSequentialGroup()
                .addGroup(PanelDentroGestion1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 478, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(PanelDentroGestion1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnDeleteUser, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnRegisterUser, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(PanelDentroGestion1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnUpdateUser, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSearchUser, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBack1, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(36, Short.MAX_VALUE))
        );

        PanelDentroGestion.setBackground(new java.awt.Color(4, 27, 43));
        PanelDentroGestion.setPreferredSize(new java.awt.Dimension(400, 500));

        lblName.setFont(new java.awt.Font("Lohit Devanagari", 1, 18)); // NOI18N
        lblName.setForeground(new java.awt.Color(255, 255, 255));
        lblName.setText("NOMBRE");

        txtNameUser.setBackground(new java.awt.Color(0, 0, 102));
        txtNameUser.setFont(new java.awt.Font("Lohit Devanagari", 0, 18)); // NOI18N
        txtNameUser.setForeground(new java.awt.Color(73, 181, 172));
        txtNameUser.setBorder(null);
        txtNameUser.setCaretColor(new java.awt.Color(73, 181, 172));
        txtNameUser.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNameUserKeyTyped(evt);
            }
        });

        jSeparator1.setBackground(new java.awt.Color(0, 153, 255));
        jSeparator1.setForeground(new java.awt.Color(0, 153, 255));

        jSeparator2.setBackground(new java.awt.Color(0, 153, 255));
        jSeparator2.setForeground(new java.awt.Color(0, 153, 255));

        txtAgeUser.setBackground(new java.awt.Color(0, 0, 102));
        txtAgeUser.setFont(new java.awt.Font("Lohit Devanagari", 0, 18)); // NOI18N
        txtAgeUser.setForeground(new java.awt.Color(73, 181, 172));
        txtAgeUser.setBorder(null);
        txtAgeUser.setCaretColor(new java.awt.Color(73, 181, 172));
        txtAgeUser.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtAgeUserKeyTyped(evt);
            }
        });

        lblEdad.setFont(new java.awt.Font("Lohit Devanagari", 1, 18)); // NOI18N
        lblEdad.setForeground(new java.awt.Color(255, 255, 255));
        lblEdad.setText("EDAD");

        txtAddressUser.setBackground(new java.awt.Color(0, 0, 102));
        txtAddressUser.setFont(new java.awt.Font("Lohit Devanagari", 0, 18)); // NOI18N
        txtAddressUser.setForeground(new java.awt.Color(73, 181, 172));
        txtAddressUser.setBorder(null);
        txtAddressUser.setCaretColor(new java.awt.Color(73, 181, 172));

        jSeparator3.setBackground(new java.awt.Color(0, 153, 255));
        jSeparator3.setForeground(new java.awt.Color(0, 153, 255));

        lblAddress.setFont(new java.awt.Font("Lohit Devanagari", 1, 18)); // NOI18N
        lblAddress.setForeground(new java.awt.Color(255, 255, 255));
        lblAddress.setText("DIRECCIÓN");

        txtPhoneNumberUser.setBackground(new java.awt.Color(0, 0, 102));
        txtPhoneNumberUser.setFont(new java.awt.Font("Lohit Devanagari", 0, 18)); // NOI18N
        txtPhoneNumberUser.setForeground(new java.awt.Color(73, 181, 172));
        txtPhoneNumberUser.setBorder(null);
        txtPhoneNumberUser.setCaretColor(new java.awt.Color(73, 181, 172));
        txtPhoneNumberUser.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtPhoneNumberUserKeyTyped(evt);
            }
        });

        lblPhoneNumber.setFont(new java.awt.Font("Lohit Devanagari", 1, 18)); // NOI18N
        lblPhoneNumber.setForeground(new java.awt.Color(255, 255, 255));
        lblPhoneNumber.setText("TELEFONO");

        txtUsername.setBackground(new java.awt.Color(0, 0, 102));
        txtUsername.setFont(new java.awt.Font("Lohit Devanagari", 0, 18)); // NOI18N
        txtUsername.setForeground(new java.awt.Color(73, 181, 172));
        txtUsername.setBorder(null);
        txtUsername.setCaretColor(new java.awt.Color(73, 181, 172));

        jSeparator5.setBackground(new java.awt.Color(0, 153, 255));
        jSeparator5.setForeground(new java.awt.Color(0, 153, 255));

        lblUsername.setFont(new java.awt.Font("Lohit Devanagari", 1, 18)); // NOI18N
        lblUsername.setForeground(new java.awt.Color(255, 255, 255));
        lblUsername.setText("NOMBRE DE USUARIO");

        jSeparator6.setBackground(new java.awt.Color(0, 153, 255));
        jSeparator6.setForeground(new java.awt.Color(0, 153, 255));

        txtEmailUser.setBackground(new java.awt.Color(0, 0, 102));
        txtEmailUser.setFont(new java.awt.Font("Lohit Devanagari", 0, 18)); // NOI18N
        txtEmailUser.setForeground(new java.awt.Color(73, 181, 172));
        txtEmailUser.setBorder(null);
        txtEmailUser.setCaretColor(new java.awt.Color(73, 181, 172));
        txtEmailUser.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtEmailUserKeyTyped(evt);
            }
        });

        lblEmail.setFont(new java.awt.Font("Lohit Devanagari", 1, 18)); // NOI18N
        lblEmail.setForeground(new java.awt.Color(255, 255, 255));
        lblEmail.setText("CORREO ELECTRONICO");

        lblPassword.setFont(new java.awt.Font("Lohit Devanagari", 1, 18)); // NOI18N
        lblPassword.setForeground(new java.awt.Color(255, 255, 255));
        lblPassword.setText("CONTRASEÑA");

        txtPasswordUser.setBackground(new java.awt.Color(0, 0, 102));
        txtPasswordUser.setFont(new java.awt.Font("Lohit Devanagari", 0, 18)); // NOI18N
        txtPasswordUser.setForeground(new java.awt.Color(73, 181, 172));
        txtPasswordUser.setBorder(null);
        txtPasswordUser.setCaretColor(new java.awt.Color(73, 181, 172));

        jSeparator8.setBackground(new java.awt.Color(0, 153, 255));
        jSeparator8.setForeground(new java.awt.Color(0, 153, 255));

        jSeparator9.setBackground(new java.awt.Color(0, 153, 255));
        jSeparator9.setForeground(new java.awt.Color(0, 153, 255));

        javax.swing.GroupLayout PanelDentroGestionLayout = new javax.swing.GroupLayout(PanelDentroGestion);
        PanelDentroGestion.setLayout(PanelDentroGestionLayout);
        PanelDentroGestionLayout.setHorizontalGroup(
            PanelDentroGestionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelDentroGestionLayout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(PanelDentroGestionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblUsername)
                    .addComponent(lblPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jSeparator8, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jSeparator6, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPasswordUser, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPhoneNumberUser, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jSeparator9, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jSeparator5, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblEmail)
                    .addComponent(txtEmailUser, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblName)
                    .addComponent(txtNameUser, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblEdad)
                    .addComponent(txtAgeUser, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblAddress)
                    .addComponent(txtAddressUser, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblPhoneNumber))
                .addContainerGap(26, Short.MAX_VALUE))
        );
        PanelDentroGestionLayout.setVerticalGroup(
            PanelDentroGestionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelDentroGestionLayout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(lblName)
                .addGap(5, 5, 5)
                .addComponent(txtNameUser, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(lblEdad)
                .addGap(5, 5, 5)
                .addComponent(txtAgeUser, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(lblAddress)
                .addGap(5, 5, 5)
                .addComponent(txtAddressUser, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblPhoneNumber)
                .addGap(4, 4, 4)
                .addComponent(txtPhoneNumberUser, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator9, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblUsername)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(txtUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jSeparator5, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(lblEmail)
                .addGap(5, 5, 5)
                .addComponent(txtEmailUser, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jSeparator6, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblPassword)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtPasswordUser, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator8, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(158, 158, 158))
        );

        javax.swing.GroupLayout PanelGestionarUsuarioLayout = new javax.swing.GroupLayout(PanelGestionarUsuario);
        PanelGestionarUsuario.setLayout(PanelGestionarUsuarioLayout);
        PanelGestionarUsuarioLayout.setHorizontalGroup(
            PanelGestionarUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelGestionarUsuarioLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(PanelDentroGestion, javax.swing.GroupLayout.PREFERRED_SIZE, 353, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(PanelDentroGestion1, javax.swing.GroupLayout.DEFAULT_SIZE, 828, Short.MAX_VALUE)
                .addContainerGap())
        );
        PanelGestionarUsuarioLayout.setVerticalGroup(
            PanelGestionarUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelGestionarUsuarioLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(PanelGestionarUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(PanelDentroGestion1, javax.swing.GroupLayout.DEFAULT_SIZE, 753, Short.MAX_VALUE)
                    .addComponent(PanelDentroGestion, javax.swing.GroupLayout.PREFERRED_SIZE, 753, Short.MAX_VALUE))
                .addContainerGap())
        );

        PanelPrincipal.addTab("Gestionar Usuarios", PanelGestionarUsuario);

        PanelDentroGestion4.setBackground(new java.awt.Color(4, 27, 43));
        PanelDentroGestion4.setPreferredSize(new java.awt.Dimension(400, 500));

        lblNameHotel.setFont(new java.awt.Font("Lohit Devanagari", 1, 18)); // NOI18N
        lblNameHotel.setForeground(new java.awt.Color(255, 255, 255));
        lblNameHotel.setText("NOMBRE");

        txtNameHotel.setBackground(new java.awt.Color(0, 0, 102));
        txtNameHotel.setFont(new java.awt.Font("Lohit Devanagari", 0, 18)); // NOI18N
        txtNameHotel.setForeground(new java.awt.Color(73, 181, 172));
        txtNameHotel.setBorder(null);
        txtNameHotel.setCaretColor(new java.awt.Color(73, 181, 172));
        txtNameHotel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNameHotelActionPerformed(evt);
            }
        });
        txtNameHotel.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNameHotelKeyTyped(evt);
            }
        });

        jSeparator17.setBackground(new java.awt.Color(0, 153, 255));
        jSeparator17.setForeground(new java.awt.Color(0, 153, 255));

        jSeparator18.setBackground(new java.awt.Color(0, 153, 255));
        jSeparator18.setForeground(new java.awt.Color(0, 153, 255));

        txtAddressHotel.setBackground(new java.awt.Color(0, 0, 102));
        txtAddressHotel.setFont(new java.awt.Font("Lohit Devanagari", 0, 18)); // NOI18N
        txtAddressHotel.setForeground(new java.awt.Color(73, 181, 172));
        txtAddressHotel.setBorder(null);
        txtAddressHotel.setCaretColor(new java.awt.Color(73, 181, 172));
        txtAddressHotel.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtAddressHotelKeyTyped(evt);
            }
        });

        lblAddressHotel.setFont(new java.awt.Font("Lohit Devanagari", 1, 18)); // NOI18N
        lblAddressHotel.setForeground(new java.awt.Color(255, 255, 255));
        lblAddressHotel.setText("DIRECCIÓN");

        lblClassificationHotel.setFont(new java.awt.Font("Lohit Devanagari", 1, 18)); // NOI18N
        lblClassificationHotel.setForeground(new java.awt.Color(255, 255, 255));
        lblClassificationHotel.setText("CLASIFICACIÓN");

        txtModConsHotel.setBackground(new java.awt.Color(0, 0, 102));
        txtModConsHotel.setFont(new java.awt.Font("Lohit Devanagari", 0, 18)); // NOI18N
        txtModConsHotel.setForeground(new java.awt.Color(73, 181, 172));
        txtModConsHotel.setBorder(null);
        txtModConsHotel.setCaretColor(new java.awt.Color(73, 181, 172));

        jSeparator20.setBackground(new java.awt.Color(0, 153, 255));
        jSeparator20.setForeground(new java.awt.Color(0, 153, 255));

        lblModCons.setFont(new java.awt.Font("Lohit Devanagari", 1, 18)); // NOI18N
        lblModCons.setForeground(new java.awt.Color(255, 255, 255));
        lblModCons.setText("COMODIDADES");

        jSeparator21.setBackground(new java.awt.Color(0, 153, 255));
        jSeparator21.setForeground(new java.awt.Color(0, 153, 255));

        txtPicturesHotel.setBackground(new java.awt.Color(0, 0, 102));
        txtPicturesHotel.setFont(new java.awt.Font("Lohit Devanagari", 0, 18)); // NOI18N
        txtPicturesHotel.setForeground(new java.awt.Color(73, 181, 172));
        txtPicturesHotel.setBorder(null);
        txtPicturesHotel.setCaretColor(new java.awt.Color(73, 181, 172));

        lblPictures.setFont(new java.awt.Font("Lohit Devanagari", 1, 18)); // NOI18N
        lblPictures.setForeground(new java.awt.Color(255, 255, 255));
        lblPictures.setText("CIUDADES");

        lblPictures1.setFont(new java.awt.Font("Lohit Devanagari", 1, 18)); // NOI18N
        lblPictures1.setForeground(new java.awt.Color(255, 255, 255));
        lblPictures1.setText("IMAGENES");

        cbCIties.setBackground(new java.awt.Color(0, 0, 102));
        cbCIties.setFont(new java.awt.Font("Lohit Devanagari", 0, 18)); // NOI18N
        cbCIties.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbCItiesItemStateChanged(evt);
            }
        });

        cbxclasification.setBackground(new java.awt.Color(0, 0, 102));
        cbxclasification.setFont(new java.awt.Font("Lohit Devanagari", 0, 24)); // NOI18N
        cbxclasification.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "seleccione", "*", "**", "***", "****", "*****" }));

        javax.swing.GroupLayout PanelDentroGestion4Layout = new javax.swing.GroupLayout(PanelDentroGestion4);
        PanelDentroGestion4.setLayout(PanelDentroGestion4Layout);
        PanelDentroGestion4Layout.setHorizontalGroup(
            PanelDentroGestion4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelDentroGestion4Layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(PanelDentroGestion4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(cbxclasification, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblPictures1)
                    .addComponent(lblPictures)
                    .addComponent(cbCIties, 0, 290, Short.MAX_VALUE)
                    .addComponent(lblModCons)
                    .addComponent(jSeparator21, javax.swing.GroupLayout.DEFAULT_SIZE, 290, Short.MAX_VALUE)
                    .addComponent(txtModConsHotel, javax.swing.GroupLayout.DEFAULT_SIZE, 290, Short.MAX_VALUE)
                    .addComponent(jSeparator20, javax.swing.GroupLayout.DEFAULT_SIZE, 290, Short.MAX_VALUE)
                    .addComponent(txtPicturesHotel, javax.swing.GroupLayout.DEFAULT_SIZE, 290, Short.MAX_VALUE)
                    .addComponent(lblNameHotel)
                    .addComponent(txtNameHotel, javax.swing.GroupLayout.DEFAULT_SIZE, 290, Short.MAX_VALUE)
                    .addComponent(jSeparator17, javax.swing.GroupLayout.DEFAULT_SIZE, 290, Short.MAX_VALUE)
                    .addComponent(lblAddressHotel)
                    .addComponent(txtAddressHotel, javax.swing.GroupLayout.DEFAULT_SIZE, 290, Short.MAX_VALUE)
                    .addComponent(jSeparator18, javax.swing.GroupLayout.DEFAULT_SIZE, 290, Short.MAX_VALUE)
                    .addComponent(lblClassificationHotel))
                .addContainerGap(26, Short.MAX_VALUE))
        );
        PanelDentroGestion4Layout.setVerticalGroup(
            PanelDentroGestion4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelDentroGestion4Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(lblNameHotel)
                .addGap(5, 5, 5)
                .addComponent(txtNameHotel, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jSeparator17, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(lblAddressHotel)
                .addGap(5, 5, 5)
                .addComponent(txtAddressHotel, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jSeparator18, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(lblClassificationHotel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cbxclasification, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(8, 8, 8)
                .addComponent(lblModCons)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(txtModConsHotel, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jSeparator20, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblPictures1)
                .addGap(4, 4, 4)
                .addComponent(txtPicturesHotel, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jSeparator21, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblPictures)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cbCIties, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(245, 245, 245))
        );

        PanelDentroGestion5.setBackground(new java.awt.Color(0, 0, 102));
        PanelDentroGestion5.setPreferredSize(new java.awt.Dimension(400, 500));

        btnDeleteHotel.setBackground(new java.awt.Color(204, 0, 0));
        btnDeleteHotel.setFont(new java.awt.Font("Lohit Devanagari", 1, 18)); // NOI18N
        btnDeleteHotel.setForeground(new java.awt.Color(255, 255, 255));
        btnDeleteHotel.setText("BORRAR");
        btnDeleteHotel.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnDeleteHotel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteHotelActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Lohit Devanagari", 1, 40)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Gestion De Hoteles");

        btnRegisterHotel.setBackground(new java.awt.Color(0, 153, 255));
        btnRegisterHotel.setFont(new java.awt.Font("Lohit Devanagari", 1, 18)); // NOI18N
        btnRegisterHotel.setForeground(new java.awt.Color(255, 255, 255));
        btnRegisterHotel.setText(" REGISTRAR HOTEL");
        btnRegisterHotel.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnRegisterHotel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegisterHotelActionPerformed(evt);
            }
        });

        btnUpdateHotel.setBackground(new java.awt.Color(0, 153, 255));
        btnUpdateHotel.setFont(new java.awt.Font("Lohit Devanagari", 1, 18)); // NOI18N
        btnUpdateHotel.setForeground(new java.awt.Color(255, 255, 255));
        btnUpdateHotel.setText("ACTUALIZAR");
        btnUpdateHotel.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnUpdateHotel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateHotelActionPerformed(evt);
            }
        });

        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/logo_mid.jpg"))); // NOI18N

        tbl_hotels.setFont(new java.awt.Font("Lohit Devanagari", 0, 15)); // NOI18N
        tbl_hotels.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane6.setViewportView(tbl_hotels);

        btnSearchHotel.setBackground(new java.awt.Color(0, 153, 255));
        btnSearchHotel.setFont(new java.awt.Font("Lohit Devanagari", 1, 18)); // NOI18N
        btnSearchHotel.setForeground(new java.awt.Color(255, 255, 255));
        btnSearchHotel.setText("BUSCAR");
        btnSearchHotel.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnSearchHotel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchHotelActionPerformed(evt);
            }
        });

        btnBack.setBackground(new java.awt.Color(0, 0, 51));
        btnBack.setFont(new java.awt.Font("Lohit Devanagari", 1, 18)); // NOI18N
        btnBack.setForeground(new java.awt.Color(255, 255, 255));
        btnBack.setText("ATRAS");
        btnBack.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout PanelDentroGestion5Layout = new javax.swing.GroupLayout(PanelDentroGestion5);
        PanelDentroGestion5.setLayout(PanelDentroGestion5Layout);
        PanelDentroGestion5Layout.setHorizontalGroup(
            PanelDentroGestion5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelDentroGestion5Layout.createSequentialGroup()
                .addGroup(PanelDentroGestion5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PanelDentroGestion5Layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addGap(138, 138, 138)
                        .addComponent(jLabel6))
                    .addGroup(PanelDentroGestion5Layout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addGroup(PanelDentroGestion5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 754, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(PanelDentroGestion5Layout.createSequentialGroup()
                                .addGroup(PanelDentroGestion5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(btnRegisterHotel, javax.swing.GroupLayout.DEFAULT_SIZE, 196, Short.MAX_VALUE)
                                    .addComponent(btnUpdateHotel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(37, 37, 37)
                                .addGroup(PanelDentroGestion5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(btnDeleteHotel, javax.swing.GroupLayout.DEFAULT_SIZE, 196, Short.MAX_VALUE)
                                    .addComponent(btnSearchHotel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(121, 121, 121)
                                .addComponent(btnBack, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(8, 8, 8)))))
                .addContainerGap(37, Short.MAX_VALUE))
        );
        PanelDentroGestion5Layout.setVerticalGroup(
            PanelDentroGestion5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelDentroGestion5Layout.createSequentialGroup()
                .addGroup(PanelDentroGestion5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 478, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(PanelDentroGestion5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnRegisterHotel, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDeleteHotel, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(PanelDentroGestion5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnUpdateHotel, javax.swing.GroupLayout.DEFAULT_SIZE, 43, Short.MAX_VALUE)
                    .addComponent(btnBack, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnSearchHotel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout PanelAdminHotelLayout = new javax.swing.GroupLayout(PanelAdminHotel);
        PanelAdminHotel.setLayout(PanelAdminHotelLayout);
        PanelAdminHotelLayout.setHorizontalGroup(
            PanelAdminHotelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelAdminHotelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(PanelDentroGestion4, javax.swing.GroupLayout.PREFERRED_SIZE, 353, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(PanelDentroGestion5, javax.swing.GroupLayout.DEFAULT_SIZE, 828, Short.MAX_VALUE)
                .addContainerGap())
        );
        PanelAdminHotelLayout.setVerticalGroup(
            PanelAdminHotelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelAdminHotelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(PanelAdminHotelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(PanelDentroGestion5, javax.swing.GroupLayout.DEFAULT_SIZE, 756, Short.MAX_VALUE)
                    .addComponent(PanelDentroGestion4, javax.swing.GroupLayout.DEFAULT_SIZE, 756, Short.MAX_VALUE))
                .addContainerGap())
        );

        PanelPrincipal.addTab("Administrar Hoteles", PanelAdminHotel);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(PanelPrincipal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 12, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(PanelPrincipal, javax.swing.GroupLayout.PREFERRED_SIZE, 782, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtAgeUserKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtAgeUserKeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();
    
        if (!Character.isDigit(c)) {
            evt.consume();
        }
    }//GEN-LAST:event_txtAgeUserKeyTyped

    private void fullCombo() {
        cbHotel.removeAllItems();
        ArrayList<Hotel> listaHotel = control.fullComboHotel();
        for (int i = 0; i < listaHotel.size(); i++) {
            cbHotel.addItem(listaHotel.get(i));
        }
        cbCIties.removeAllItems();
          ArrayList<City> listaCIty = control.fullComboCity();
        for (int i = 0; i < listaCIty.size(); i++) {
            cbCIties.addItem(listaCIty.get(i));
        }
      
    }
    
    
    

    private void btnUpdateUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateUserActionPerformed

        String name = null;
        String username = txtUsername.getText();
        int age = 0;
        String email = null;
        String password = (txtPasswordUser.getText());
        String address = txtAddressUser.getText();
        String phone_number = null;
        if (txtNameUser.getText() == null || username.isEmpty() || txtEmailUser.getText() == null || txtPasswordUser.getText() == null || txtAddressUser.getText() == null || txtNameUser.getText() == null) {
            JOptionPane.showMessageDialog(null, "Debe completar todos los campos obligatorios");
            return;
        } else {
            if (verifyCaracter_spaces(txtNameUser.getText())) {
                name = txtNameUser.getText();
            } else {
                JOptionPane.showMessageDialog(null, "No puede ingresar números en la casilla de nombre");
                return;
            }
            if (verifyNumber(txtAgeUser.getText())) {
                age = Integer.parseInt(txtAgeUser.getText());
            } else {
                JOptionPane.showMessageDialog(null, "No puede ingresar letras en la casilla de edad");
                return;
            }
            if (verify_email(txtEmailUser.getText())) {
                email = txtEmailUser.getText();
            } else {
                JOptionPane.showMessageDialog(null, "Ingrese un correo valido");
                return;
            }
            if (verifyColombianNumber(txtPhoneNumberUser.getText())) {
                phone_number = txtPhoneNumberUser.getText();
            } else {
                JOptionPane.showMessageDialog(null, "Ingrese un numero de telefono valido");
                return;
            }
            int selectedRow = tbl_users.getSelectedRow();
            if (selectedRow != -1) {
                Object selectedValue = tbl_users.getValueAt(selectedRow, 0);
                if (selectedValue != null) {
                    int id = Integer.parseInt(selectedValue.toString());
                    User user = new User(id, name, age, username, password, email, phone_number, 2, address);
                    control.update(user);
                    clean();
                    JOptionPane.showMessageDialog(null, "Ha actualizado el usuario de: " + name);
                } else {
                    JOptionPane.showMessageDialog(null, "Debe seleccionar el usuario en la lista que desea actualizar");
                }
            } else {
                JOptionPane.showMessageDialog(null, "Debe seleccionar el usuario en la lista que desea actualizar");
            }

            fillTableUsers();
        }
    }//GEN-LAST:event_btnUpdateUserActionPerformed

    private void btnRegisterUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegisterUserActionPerformed
        int id = 0;
        String name = null;
        String username = txtUsername.getText();
        int age = 0;
        String email = null;
        String password = (txtPasswordUser.getText());
        String address = txtAddressUser.getText();
        String phone_number = null;
        if (txtNameUser.getText() == null || username.isEmpty() || txtEmailUser.getText() == null || txtPasswordUser.getText() == null || txtAddressUser.getText() == null || txtNameUser.getText() == null) {
            JOptionPane.showMessageDialog(null, "Debe completar todos los campos obligatorios");
            return;
        } else {
            if (verifyCaracter_spaces(txtNameUser.getText())) {
                name = txtNameUser.getText();
            } else {
                JOptionPane.showMessageDialog(null, "No puede ingresar números en la casilla de nombre");
                return;
            }
            if (verifyAge(txtAgeUser.getText())) {
                age = Integer.parseInt(txtAgeUser.getText());
            } else {
                JOptionPane.showMessageDialog(null, "No puede ingresar letras en la casilla de edad, tampoco numeros negativos de otro tipo");
                return;
            }
            if (verify_email(txtEmailUser.getText())) {
                email = txtEmailUser.getText();
            } else {
                JOptionPane.showMessageDialog(null, "Ingrese un correo valido");
                return;
            }
            if (verifyColombianNumber(txtPhoneNumberUser.getText())) {
                phone_number = txtPhoneNumberUser.getText();
            } else {
                JOptionPane.showMessageDialog(null, "Ingrese un numero de telefono valido");
                return;
            }
            User user = new User(id, name, age, username, password, email, phone_number, 2, address);
            control.insert(user);
            clean();
            JOptionPane.showMessageDialog(null, "Ha creado el usuario de: " + name);
            fillTableUsers();
        }
    }//GEN-LAST:event_btnRegisterUserActionPerformed

    private void btnDeleteUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteUserActionPerformed
        int selectedRow = tbl_users.getSelectedRow();
        if (selectedRow != -1) {
            Object selectedValue = tbl_users.getValueAt(selectedRow, 0);
            if (selectedValue != null) {
                int id = Integer.parseInt(selectedValue.toString());
                control.delete(id);
                fillTableUsers();
            } else {
                JOptionPane.showMessageDialog(null, "No se ha seleccionado ninguna fila.");
            }
        } else {
            JOptionPane.showMessageDialog(null, "No se ha seleccionado ninguna fila.");
        }
    }//GEN-LAST:event_btnDeleteUserActionPerformed

    private void btnDeleteRoomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteRoomActionPerformed
        // TODO add your handling code here:
        int selectedRow = tbl_rooms.getSelectedRow();
        if (selectedRow != -1) {
            Object selectedValue = tbl_rooms.getValueAt(selectedRow, 0);
            if (selectedValue != null) {
                int id = Integer.parseInt(selectedValue.toString());
                control.deleteRoom(id);
                fillTableRooms();
            } else {
                JOptionPane.showMessageDialog(null, "No se ha seleccionado ninguna fila.");
            }
        } else {
            JOptionPane.showMessageDialog(null, "No se ha seleccionado ninguna fila.");
        }
    }//GEN-LAST:event_btnDeleteRoomActionPerformed

    private void btnRegisterRoomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegisterRoomActionPerformed
        // TODO add your handling code here:
        int id_stade_room = -1;
        int id_type_room = -1;
        int number_rooom = -1;
        double priceNigth = -1;
        String amenitiesDetails = txtModConsRoom.getText();
        
        if (txtNumberRoom.getText().isEmpty() || amenitiesDetails == null || txtPriceNight.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "llene todos los campos");
            return;
        } else {
            Hotel hotel = (Hotel) cbHotel.getSelectedItem();
            int id_hotel = hotel.getId();
            if (verifyIndexItems(cbxStadeRoom.getSelectedIndex())) {
                id_stade_room = cbxStadeRoom.getSelectedIndex();
            } else {
                JOptionPane.showMessageDialog(null, "Selecione un estado para la habitación");
                return;
            }
            if (verifyIndexItems(cbxTypeRoom.getSelectedIndex())) {
                id_type_room = cbxTypeRoom.getSelectedIndex();
            } else {
                JOptionPane.showMessageDialog(null, "Selecione un tipo de habitación");
                return;
            }
            if (verifyNumber(txtNumberRoom.getText())) {
                number_rooom = Integer.parseInt(txtNumberRoom.getText());
            } else {
                JOptionPane.showMessageDialog(null, "Ingrese solo numeros para el número de habitación");
                return;
            }
            if (verifyNumber(txtPriceNight.getText())) {
                priceNigth = Float.parseFloat(txtPriceNight.getText());
            } else {
                JOptionPane.showMessageDialog(null, "Ingrese solo numeros para el precio de la noche");
                return;
            }
            int numberGuests = Integer.parseInt(cbxNumberGuests.getSelectedItem().toString());
            Room room = new Room(0, id_stade_room, numberGuests, id_type_room, id_hotel, number_rooom, priceNigth, amenitiesDetails);
            control.insertRoom(room);
            fillTableRooms();
        }
    }//GEN-LAST:event_btnRegisterRoomActionPerformed

    private void btnUpdateRoomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateRoomActionPerformed
        // TODO add your handling code here:
        int id_stade_room = -1;
        int id_type_room = -1;
        int number_rooom = -1;
        double priceNigth = -1;
        String amenitiesDetails = txtModConsRoom.getText();
        if (txtNumberRoom.getText().isEmpty() || amenitiesDetails == null || txtPriceNight.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "llene todos los campos");
            return;
        } else {
            if (verifyIndexItems(cbxStadeRoom.getSelectedIndex())) {
                id_stade_room = cbxStadeRoom.getSelectedIndex();
            } else {
                JOptionPane.showMessageDialog(null, "Selecione un estado para la habitación");
                return;
            }
            if (verifyIndexItems(cbxTypeRoom.getSelectedIndex())) {
                id_type_room = cbxTypeRoom.getSelectedIndex();
            } else {
                JOptionPane.showMessageDialog(null, "Selecione un tipo de habitación");
                return;
            }
            if (verifyNumber(txtNumberRoom.getText())) {
                number_rooom = Integer.parseInt(txtNumberRoom.getText());
            } else {
                JOptionPane.showMessageDialog(null, "Ingrese solo numeros para el número de habitación");
                return;
            }
            if (verifyNumber(txtPriceNight.getText())) {
                priceNigth = Float.parseFloat(txtPriceNight.getText());
            } else {
                JOptionPane.showMessageDialog(null, "Ingrese solo numeros para el precio de la noche");
                return;
            }

            int selectedRow = tbl_rooms.getSelectedRow();
            if (selectedRow != -1) {
                Object selectedValue = tbl_rooms.getValueAt(selectedRow, 0);
                if (selectedValue != null) {
                    Hotel hotel = (Hotel) cbHotel.getSelectedItem();
                    int id_hotel = hotel.getId();
                    int id = Integer.parseInt(selectedValue.toString());
                    int numberGuests = Integer.parseInt(cbxNumberGuests.getSelectedItem().toString());
                    Room room = new Room(id, id_stade_room, numberGuests ,id_type_room, id_hotel, number_rooom, priceNigth, amenitiesDetails);
                    control.updateRoom(room);
                    fillTableRooms();
                } else {
                    JOptionPane.showMessageDialog(null, "Debe seleccionar la habitación en la lista que desea actualizar");
                    return;
                }
            } else {
                JOptionPane.showMessageDialog(null, "Debe seleccionar la habitación en la lista que desea actualizar");
                return;
            }
        }
    }//GEN-LAST:event_btnUpdateRoomActionPerformed

    private void btnDeleteHotelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteHotelActionPerformed
        // TODO add your handling code here:
        int selectedRow = tbl_hotels.getSelectedRow();
        if (selectedRow != -1) {
            Object selectedValue = tbl_hotels.getValueAt(selectedRow, 0);
            if (selectedValue != null) {
                int id = Integer.parseInt(selectedValue.toString());
                control.deleteHotel(id);
                fullCombo();
            } else {
                JOptionPane.showMessageDialog(null, "No se ha seleccionado ninguna fila.");
            }
        } else {
            JOptionPane.showMessageDialog(null, "No se ha seleccionado ninguna fila.");
        }
        fillTableHotels();
    }//GEN-LAST:event_btnDeleteHotelActionPerformed

    private void btnRegisterHotelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegisterHotelActionPerformed
        // TODO add your handling code here:
        int id_hotel = 0;
        String nameHotel = null;
        String addressHotel = txtAddressHotel.getText();
        String classification = (String) cbxclasification.getSelectedItem();
        String mob_cons = txtModConsHotel.getText();
        String images = txtPicturesHotel.getText();
        City citi = (City) cbCIties.getSelectedItem();
        
        if (txtNameHotel.getText().isEmpty() || addressHotel.isEmpty() || classification.isEmpty() || mob_cons.isEmpty() || images.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Debe completar todos los campos obligatorios");
        } else {
            if (verifyCaracter_spaces(txtNameHotel.getText())) {
                nameHotel = txtNameHotel.getText();
                System.out.println(citi.getId_city());
               
                Hotel hotel = new Hotel(id_hotel, nameHotel, addressHotel, classification, mob_cons, images, citi.getId_city());
                control.insertHotel(hotel);
                fillTableHotels();
                fullCombo();
            } else {
                JOptionPane.showMessageDialog(null, "No puede ingresar números en la casilla de nombre");
            }
        }
    }//GEN-LAST:event_btnRegisterHotelActionPerformed

    private void btnUpdateHotelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateHotelActionPerformed
        // TODO add your handling code here:
        int id_hotel = 0;
        String nameHotel = null;
        String addressHotel = txtAddressHotel.getText();
        String classification = (String) cbxclasification.getSelectedItem();
        String mob_cons = txtModConsHotel.getText();
        String images = txtPicturesHotel.getText();
        City citi  = (City) cbCIties.getSelectedItem();
        if (txtNameHotel.getText().isEmpty() || addressHotel.isEmpty() || classification.isEmpty() || mob_cons.isEmpty() || images.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Debe completar todos los campos obligatorios");
            return;
        } else {
            if (verifyCaracter_spaces(txtNameHotel.getText())) {
                nameHotel = txtNameHotel.getText();
            } else {
                JOptionPane.showMessageDialog(null, "No puede ingresar números en la casilla de nombre");
            }
            int selectedRow = tbl_hotels.getSelectedRow();
            if (selectedRow != -1) {
                Object selectedValue = tbl_hotels.getValueAt(selectedRow, 0);
                if (selectedValue != null) {
                    id_hotel = Integer.parseInt(selectedValue.toString());

                } else {
                    JOptionPane.showMessageDialog(null, "Debe seleccionar el hotel en la lista que desea actualizar");
                }
            } else {
                JOptionPane.showMessageDialog(null, "Debe seleccionar el hotel en la lista que desea actualizar");
            }
            Hotel hotel = new Hotel(id_hotel, nameHotel, addressHotel, classification, mob_cons, images,citi.getId_city());
            control.updateHotel(hotel);
            fillTableHotels();
            fullCombo();
        }
    }//GEN-LAST:event_btnUpdateHotelActionPerformed

    private void txtAddressHotelKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtAddressHotelKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAddressHotelKeyTyped

    private void cbxStadeRoomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxStadeRoomActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbxStadeRoomActionPerformed

    private void txtNameHotelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNameHotelActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNameHotelActionPerformed

    private void btnSearchRoomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchRoomActionPerformed
        // TODO add your handling code here:
        int id_room = 0;
        int selectedRow = tbl_rooms.getSelectedRow();
        if (selectedRow != -1) {
            Object selectedValue = tbl_rooms.getValueAt(selectedRow, 0);
            if (selectedValue != null) {
                id_room = Integer.parseInt(selectedValue.toString());

            } else {
                JOptionPane.showMessageDialog(null, "Debe seleccionar la habitación en la lista que desea buscar");
                return;
            }
        } else {
            JOptionPane.showMessageDialog(null, "Debe seleccionar la habitación en la lista que desea buscar");
            return;
        }
        Room room = control.searchRoom(id_room);
        txtNumberRoom.setText(String.valueOf(room.getNumber_rooom()));
        cbHotel.setSelectedItem(control.searchHotel(room.getId_hotel()).getNameHotel());
        txtModConsRoom.setText(room.getAmenitiesDetails());
        txtPriceNight.setText(String.valueOf(room.getPriceNigth()));
        cbxStadeRoom.setSelectedIndex(room.getId_stade_room());
        cbxTypeRoom.setSelectedIndex(room.getId_type_room());
    }//GEN-LAST:event_btnSearchRoomActionPerformed

    private void btnSearchUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchUserActionPerformed
        // TODO add your handling code here:
        int id_user = 0;
        int selectedRow = tbl_users.getSelectedRow();
        if (selectedRow != -1) {
            Object selectedValue = tbl_users.getValueAt(selectedRow, 0);
            if (selectedValue != null) {
                id_user = Integer.parseInt(selectedValue.toString());

            } else {
                JOptionPane.showMessageDialog(null, "Debe seleccionar el usuario en la lista que desea buscar");
                return;
            }
        } else {
            JOptionPane.showMessageDialog(null, "Debe seleccionar el usuario en la lista que desea buscar");
            return;
        }
        User user = control.searchAdmin(id_user);
        txtNameUser.setText(user.getName());
        txtAgeUser.setText(String.valueOf(user.getAge()));
        txtAddressUser.setText(user.getAddress());
        txtPhoneNumberUser.setText(user.getCountDetails());
        txtUsername.setText(user.getUsername());
        txtEmailUser.setText(user.getEmail());
        txtPasswordUser.setText(user.getPassword());
    }//GEN-LAST:event_btnSearchUserActionPerformed

    private void btnSearchHotelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchHotelActionPerformed
        // TODO add your handling code here:
        int id_hotel = 0;
        int selectedRow = tbl_hotels.getSelectedRow();
        if (selectedRow != -1) {
            Object selectedValue = tbl_hotels.getValueAt(selectedRow, 0);
            if (selectedValue != null) {
                id_hotel = Integer.parseInt(selectedValue.toString());

            } else {
                JOptionPane.showMessageDialog(null, "Debe seleccionar el hotel en la lista que desea buscar");
                return;
            }
        } else {
            JOptionPane.showMessageDialog(null, "Debe seleccionar el hotel en la lista que desea buscar");
            return;
        }
        Hotel hotel = control.searchHotel(id_hotel);
        txtNameHotel.setText(hotel.getNameHotel());
        txtAddressHotel.setText(hotel.getAdress());
        cbxclasification.setSelectedItem(hotel.getClassification());
        txtModConsHotel.setText(hotel.getModCons());
        txtPicturesHotel.setText(hotel.getPictures());
        cbHotel.setSelectedItem(hotel);
    }//GEN-LAST:event_btnSearchHotelActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        LoginView ven = new LoginView();
        ven.setVisible(true);
        ven.setLocationRelativeTo(this);
        this.dispose();
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnBack1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBack1ActionPerformed
        // TODO add your handling code here:
        LoginView ven = new LoginView();
        ven.setVisible(true);
        ven.setLocationRelativeTo(this);
        this.dispose();
    }//GEN-LAST:event_btnBack1ActionPerformed

    private void btnBack2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBack2ActionPerformed
        // TODO add your handling code here:
        LoginView ven = new LoginView();
        ven.setVisible(true);
        ven.setLocationRelativeTo(this);
        this.dispose();
    }//GEN-LAST:event_btnBack2ActionPerformed

    private void cbHotelItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbHotelItemStateChanged

    }//GEN-LAST:event_cbHotelItemStateChanged

    private void cbCItiesItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbCItiesItemStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_cbCItiesItemStateChanged

    private void txtNameHotelKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNameHotelKeyTyped
        char c = evt.getKeyChar();
    
        if (Character.isDigit(c)) {
            evt.consume();
        }
    }//GEN-LAST:event_txtNameHotelKeyTyped

    private void txtNameUserKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNameUserKeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();
    
        if (Character.isDigit(c)) {
            evt.consume();
        }
    }//GEN-LAST:event_txtNameUserKeyTyped

    private void txtPhoneNumberUserKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPhoneNumberUserKeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();
    
        if (!Character.isDigit(c)) {
            evt.consume();
        }
    }//GEN-LAST:event_txtPhoneNumberUserKeyTyped

    private void txtEmailUserKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtEmailUserKeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();
    
        String validCharacters = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789@._-";

        if (validCharacters.indexOf(c) == -1) {
            evt.consume();
        }
    }//GEN-LAST:event_txtEmailUserKeyTyped

    public boolean verify_email(String email) {
        String value = "^[a-zA-Z0-9_+&*-]+(?:\\.[a-zA-Z0-9_+&*-]+)*@(?:[a-zA-Z0-9-]+\\.)+[a-zA-Z]{2,7}$";

        Pattern pattern = Pattern.compile(value);

        Matcher matcher = pattern.matcher(email);
        return matcher.matches();
    }

    public static boolean verifyColombianNumber(String number) {
        String regex = "^(\\+57)?\\s*([0-9]\\s*){10}$";

        Pattern pattern = Pattern.compile(regex);

        Matcher matcher = pattern.matcher(number);

        return matcher.matches();
    }

    public boolean verifyNumber(String number) {

        String value = "^[0-9]*\\.?[0-9]+$";

        Pattern pattern = Pattern.compile(value);

        Matcher matcher = pattern.matcher(number);
        return matcher.matches() && Double.parseDouble(number) > 0;
    }

    public static boolean verifyAge(String age) {
        String regex = "^(?:1[0-1][0-9]|[1-9]?[0-9])$|^120$";

        Pattern pattern = Pattern.compile(regex);

        Matcher matcher = pattern.matcher(age);
        return matcher.matches();
    }

    public boolean verifyIndexItems(int value) {
        if (value < 1) {
            return false;
        }
        return true;
    }

    public boolean verifyCaracter_spaces(String text) {
        String value = "^[a-zA-Z\\s]+$";

        Pattern pattern = Pattern.compile(value);

        Matcher matcher = pattern.matcher(text);
        return matcher.matches();
    }

    public void fillTableUsers() {
        // Llamamos al método select del controlador de usuario. Este método devuelve un mapa con los nombres de las columnas, el número de columnas y los datos de la tabla.
        Map<String, Object> result = control.selectUsers();

        // Obtenemos los nombres de las columnas del mapa de resultados. Los nombres de las columnas se devuelven como una lista de cadenas.
        List<String> columnNames = (List<String>) result.get("columnNames");

        // Obtenemos los datos de la tabla del mapa de resultados. Los datos de la tabla se devuelven como una lista de listas de objetos. Cada lista interna representa una fila de la tabla y contiene los datos de esa fila.
        List<List<Object>> tableData = (List<List<Object>>) result.get("tableData");

        // Creamos un nuevo modelo de tabla. Un modelo de tabla es un objeto que gestiona los datos de una tabla.
        DefaultTableModel model = new DefaultTableModel();

        // Recorremos la lista de nombres de columnas
        for (String columnName : columnNames) {
            // Agregamos cada nombre de columna al modelo de la tabla. Esto crea las columnas en la tabla.
            model.addColumn(columnName);
        }

        // Recorremos la lista de datos de la tabla
        for (List<Object> rowData : tableData) {
            // Agregamos cada fila de datos al modelo de la tabla. Esto agrega los datos a las columnas correspondientes en la tabla.
            model.addRow(rowData.toArray());
        }

        // Establecemos el modelo en la tabla. Esto actualiza la tabla para mostrar los datos del modelo.
        tbl_users.setModel(model);
    }

    public void fillTableHotels() {
        // Llamamos al método select del controlador de usuario. Este método devuelve un mapa con los nombres de las columnas, el número de columnas y los datos de la tabla.
        Map<String, Object> result = control.selectHotels();

        // Obtenemos los nombres de las columnas del mapa de resultados. Los nombres de las columnas se devuelven como una lista de cadenas.
        List<String> columnNames = (List<String>) result.get("columnNames");

        // Obtenemos los datos de la tabla del mapa de resultados. Los datos de la tabla se devuelven como una lista de listas de objetos. Cada lista interna representa una fila de la tabla y contiene los datos de esa fila.
        List<List<Object>> tableData = (List<List<Object>>) result.get("tableData");

        // Creamos un nuevo modelo de tabla. Un modelo de tabla es un objeto que gestiona los datos de una tabla.
        DefaultTableModel model = new DefaultTableModel();

        // Recorremos la lista de nombres de columnas
        for (String columnName : columnNames) {
            // Agregamos cada nombre de columna al modelo de la tabla. Esto crea las columnas en la tabla.
            model.addColumn(columnName);
        }

        // Recorremos la lista de datos de la tabla
        for (List<Object> rowData : tableData) {
            // Agregamos cada fila de datos al modelo de la tabla. Esto agrega los datos a las columnas correspondientes en la tabla.
            model.addRow(rowData.toArray());
        }

        // Establecemos el modelo en la tabla. Esto actualiza la tabla para mostrar los datos del modelo.
        tbl_hotels.setModel(model);
    }

    public void fillTableRooms() {
        // Llamamos al método select del controlador de usuario. Este método devuelve un mapa con los nombres de las columnas, el número de columnas y los datos de la tabla.
        Map<String, Object> result = control.selectRooms();

        // Obtenemos los nombres de las columnas del mapa de resultados. Los nombres de las columnas se devuelven como una lista de cadenas.
        List<String> columnNames = (List<String>) result.get("columnNames");

        // Obtenemos los datos de la tabla del mapa de resultados. Los datos de la tabla se devuelven como una lista de listas de objetos. Cada lista interna representa una fila de la tabla y contiene los datos de esa fila.
        List<List<Object>> tableData = (List<List<Object>>) result.get("tableData");

        // Creamos un nuevo modelo de tabla. Un modelo de tabla es un objeto que gestiona los datos de una tabla.
        DefaultTableModel model = new DefaultTableModel();

        // Recorremos la lista de nombres de columnas
        for (String columnName : columnNames) {
            // Agregamos cada nombre de columna al modelo de la tabla. Esto crea las columnas en la tabla.
            model.addColumn(columnName);
        }

        // Recorremos la lista de datos de la tabla
        for (List<Object> rowData : tableData) {
            // Agregamos cada fila de datos al modelo de la tabla. Esto agrega los datos a las columnas correspondientes en la tabla.
            model.addRow(rowData.toArray());
        }

        // Establecemos el modelo en la tabla. Esto actualiza la tabla para mostrar los datos del modelo.
        tbl_rooms.setModel(model);
    }

    private void clean() {
        txtNameUser.setText("");
        txtAgeUser.setText("");
        txtUsername.setText("");
        txtPasswordUser.setText("");
        txtEmailUser.setText("");
        txtPhoneNumberUser.setText("");
        txtAddressUser.setText("");

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AdministrationView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AdministrationView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AdministrationView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AdministrationView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AdministrationView().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel PanelAdminHabita;
    private javax.swing.JPanel PanelAdminHotel;
    private javax.swing.JPanel PanelDentroGestion;
    private javax.swing.JPanel PanelDentroGestion1;
    private javax.swing.JPanel PanelDentroGestion2;
    private javax.swing.JPanel PanelDentroGestion3;
    private javax.swing.JPanel PanelDentroGestion4;
    private javax.swing.JPanel PanelDentroGestion5;
    private javax.swing.JPanel PanelGestionarUsuario;
    private javax.swing.JTabbedPane PanelPrincipal;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnBack1;
    private javax.swing.JButton btnBack2;
    private javax.swing.JButton btnDeleteHotel;
    private javax.swing.JButton btnDeleteRoom;
    private javax.swing.JButton btnDeleteUser;
    private javax.swing.JButton btnRegisterHotel;
    private javax.swing.JButton btnRegisterRoom;
    private javax.swing.JButton btnRegisterUser;
    private javax.swing.JButton btnSearchHotel;
    private javax.swing.JButton btnSearchRoom;
    private javax.swing.JButton btnSearchUser;
    private javax.swing.JButton btnUpdateHotel;
    private javax.swing.JButton btnUpdateRoom;
    private javax.swing.JButton btnUpdateUser;
    private javax.swing.JComboBox<City> cbCIties;
    private javax.swing.JComboBox<Hotel> cbHotel;
    private javax.swing.JComboBox cbxNumberGuests;
    private javax.swing.JComboBox<String> cbxStadeRoom;
    private javax.swing.JComboBox<String> cbxTypeRoom;
    private javax.swing.JComboBox<String> cbxclasification;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPasswordField jPasswordField1;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator17;
    private javax.swing.JSeparator jSeparator18;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator20;
    private javax.swing.JSeparator jSeparator21;
    private javax.swing.JSeparator jSeparator22;
    private javax.swing.JSeparator jSeparator25;
    private javax.swing.JSeparator jSeparator26;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JSeparator jSeparator6;
    private javax.swing.JSeparator jSeparator8;
    private javax.swing.JSeparator jSeparator9;
    private javax.swing.JLabel lblAddress;
    private javax.swing.JLabel lblAddressHotel;
    private javax.swing.JLabel lblAddressHotel1;
    private javax.swing.JLabel lblAddressHotel2;
    private javax.swing.JLabel lblClassificationHotel;
    private javax.swing.JLabel lblClassificationHotel1;
    private javax.swing.JLabel lblEdad;
    private javax.swing.JLabel lblEmail;
    private javax.swing.JLabel lblModCons;
    private javax.swing.JLabel lblModCons1;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblNameHotel;
    private javax.swing.JLabel lblNameHotel1;
    private javax.swing.JLabel lblPassword;
    private javax.swing.JLabel lblPhoneNumber;
    private javax.swing.JLabel lblPictures;
    private javax.swing.JLabel lblPictures1;
    private javax.swing.JLabel lblPriceNight;
    private javax.swing.JLabel lblUsername;
    private javax.swing.JLabel lblnameHotel;
    private javax.swing.JTable tbl_hotels;
    private javax.swing.JTable tbl_rooms;
    private javax.swing.JTable tbl_users;
    private javax.swing.JTextField txtAddressHotel;
    private javax.swing.JTextField txtAddressUser;
    private javax.swing.JTextField txtAgeUser;
    private javax.swing.JTextField txtEmailUser;
    private javax.swing.JTextField txtModConsHotel;
    private javax.swing.JTextField txtModConsRoom;
    private javax.swing.JTextField txtNameHotel;
    private javax.swing.JTextField txtNameUser;
    private javax.swing.JTextField txtNumberRoom;
    private javax.swing.JTextField txtPasswordUser;
    private javax.swing.JTextField txtPhoneNumberUser;
    private javax.swing.JTextField txtPicturesHotel;
    private javax.swing.JTextField txtPriceNight;
    private javax.swing.JTextField txtUsername;
    // End of variables declaration//GEN-END:variables
}
